import { z } from "zod";
export declare const EntitlementsSchema: z.ZodObject<{
    devPortalZuploBranding: z.ZodBoolean;
    numberOfProjects: z.ZodNumber;
    numberOfUsers: z.ZodNumber;
    egressGbPerMonth: z.ZodNumber;
    requestsPerMonth: z.ZodNumber;
    numberOfApiKeys: z.ZodNumber;
    customDomains: z.ZodNumber;
    advancedAnalyticsEnabled: z.ZodBoolean;
    devPortalAnalyticsEnabled: z.ZodBoolean;
    premiumSupport: z.ZodBoolean;
    emergencyPhoneSupport: z.ZodBoolean;
    rbacEnabled: z.ZodBoolean;
    onPremEnabled: z.ZodBoolean;
    largeBuildRunners: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    devPortalZuploBranding: boolean;
    numberOfProjects: number;
    numberOfUsers: number;
    egressGbPerMonth: number;
    requestsPerMonth: number;
    numberOfApiKeys: number;
    customDomains: number;
    advancedAnalyticsEnabled: boolean;
    devPortalAnalyticsEnabled: boolean;
    premiumSupport: boolean;
    emergencyPhoneSupport: boolean;
    rbacEnabled: boolean;
    onPremEnabled: boolean;
    largeBuildRunners: boolean;
}, {
    devPortalZuploBranding: boolean;
    numberOfProjects: number;
    numberOfUsers: number;
    egressGbPerMonth: number;
    requestsPerMonth: number;
    numberOfApiKeys: number;
    customDomains: number;
    advancedAnalyticsEnabled: boolean;
    devPortalAnalyticsEnabled: boolean;
    premiumSupport: boolean;
    emergencyPhoneSupport: boolean;
    rbacEnabled: boolean;
    onPremEnabled: boolean;
    largeBuildRunners: boolean;
}>;
export declare const BuildConfigSchema: z.ZodObject<{
    entitlements: z.ZodObject<{
        devPortalZuploBranding: z.ZodBoolean;
        numberOfProjects: z.ZodNumber;
        numberOfUsers: z.ZodNumber;
        egressGbPerMonth: z.ZodNumber;
        requestsPerMonth: z.ZodNumber;
        numberOfApiKeys: z.ZodNumber;
        customDomains: z.ZodNumber;
        advancedAnalyticsEnabled: z.ZodBoolean;
        devPortalAnalyticsEnabled: z.ZodBoolean;
        premiumSupport: z.ZodBoolean;
        emergencyPhoneSupport: z.ZodBoolean;
        rbacEnabled: z.ZodBoolean;
        onPremEnabled: z.ZodBoolean;
        largeBuildRunners: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        devPortalZuploBranding: boolean;
        numberOfProjects: number;
        numberOfUsers: number;
        egressGbPerMonth: number;
        requestsPerMonth: number;
        numberOfApiKeys: number;
        customDomains: number;
        advancedAnalyticsEnabled: boolean;
        devPortalAnalyticsEnabled: boolean;
        premiumSupport: boolean;
        emergencyPhoneSupport: boolean;
        rbacEnabled: boolean;
        onPremEnabled: boolean;
        largeBuildRunners: boolean;
    }, {
        devPortalZuploBranding: boolean;
        numberOfProjects: number;
        numberOfUsers: number;
        egressGbPerMonth: number;
        requestsPerMonth: number;
        numberOfApiKeys: number;
        customDomains: number;
        advancedAnalyticsEnabled: boolean;
        devPortalAnalyticsEnabled: boolean;
        premiumSupport: boolean;
        emergencyPhoneSupport: boolean;
        rbacEnabled: boolean;
        onPremEnabled: boolean;
        largeBuildRunners: boolean;
    }>;
    environmentType: z.ZodString;
    deploymentName: z.ZodString;
    deploymentUrl: z.ZodString;
    projectId: z.ZodString;
    projectType: z.ZodString;
    sourceType: z.ZodString;
    accountName: z.ZodString;
    projectName: z.ZodString;
}, "strip", z.ZodTypeAny, {
    entitlements: {
        devPortalZuploBranding: boolean;
        numberOfProjects: number;
        numberOfUsers: number;
        egressGbPerMonth: number;
        requestsPerMonth: number;
        numberOfApiKeys: number;
        customDomains: number;
        advancedAnalyticsEnabled: boolean;
        devPortalAnalyticsEnabled: boolean;
        premiumSupport: boolean;
        emergencyPhoneSupport: boolean;
        rbacEnabled: boolean;
        onPremEnabled: boolean;
        largeBuildRunners: boolean;
    };
    environmentType: string;
    deploymentName: string;
    deploymentUrl: string;
    projectId: string;
    projectType: string;
    sourceType: string;
    accountName: string;
    projectName: string;
}, {
    entitlements: {
        devPortalZuploBranding: boolean;
        numberOfProjects: number;
        numberOfUsers: number;
        egressGbPerMonth: number;
        requestsPerMonth: number;
        numberOfApiKeys: number;
        customDomains: number;
        advancedAnalyticsEnabled: boolean;
        devPortalAnalyticsEnabled: boolean;
        premiumSupport: boolean;
        emergencyPhoneSupport: boolean;
        rbacEnabled: boolean;
        onPremEnabled: boolean;
        largeBuildRunners: boolean;
    };
    environmentType: string;
    deploymentName: string;
    deploymentUrl: string;
    projectId: string;
    projectType: string;
    sourceType: string;
    accountName: string;
    projectName: string;
}>;
export type BuildConfig = z.infer<typeof BuildConfigSchema>;
export type Entitlements = z.infer<typeof EntitlementsSchema>;
